// Code generated by MockGen. DO NOT EDIT.
// Source: internal/usecase/user/uc.user.dep.go

// Package mock_user is a generated GoMock package.
package user

import (
	context "context"
	reflect "reflect"

	model "github.com/androsyz/inventory/internal/model"
	gomock "github.com/golang/mock/gomock"
)

// MockrepoUserInterface is a mock of repoUserInterface interface.
type MockrepoUserInterface struct {
	ctrl     *gomock.Controller
	recorder *MockrepoUserInterfaceMockRecorder
}

// MockrepoUserInterfaceMockRecorder is the mock recorder for MockrepoUserInterface.
type MockrepoUserInterfaceMockRecorder struct {
	mock *MockrepoUserInterface
}

// NewMockrepoUserInterface creates a new mock instance.
func NewMockrepoUserInterface(ctrl *gomock.Controller) *MockrepoUserInterface {
	mock := &MockrepoUserInterface{ctrl: ctrl}
	mock.recorder = &MockrepoUserInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockrepoUserInterface) EXPECT() *MockrepoUserInterfaceMockRecorder {
	return m.recorder
}

// CreateUser mocks base method.
func (m *MockrepoUserInterface) CreateUser(ctx context.Context, user *model.User) (int, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateUser", ctx, user)
	ret0, _ := ret[0].(int)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateUser indicates an expected call of CreateUser.
func (mr *MockrepoUserInterfaceMockRecorder) CreateUser(ctx, user interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateUser", reflect.TypeOf((*MockrepoUserInterface)(nil).CreateUser), ctx, user)
}

// GetUsers mocks base method.
func (m *MockrepoUserInterface) GetUsers(ctx context.Context) ([]*model.User, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetUsers", ctx)
	ret0, _ := ret[0].([]*model.User)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetUsers indicates an expected call of GetUsers.
func (mr *MockrepoUserInterfaceMockRecorder) GetUsers(ctx interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetUsers", reflect.TypeOf((*MockrepoUserInterface)(nil).GetUsers), ctx)
}
